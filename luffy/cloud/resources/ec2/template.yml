AWSTemplateFormatVersion: "2010-09-09"

Description:
  This represents an EC2 instance to expose my application via Kind

Resources:

  # KindKeyPair:
  #   Type: 'AWS::EC2::KeyPair'
  #   Properties:
  #     KeyName: KindKeyPairCluster
  
  KindEC2Instance: 
    Type: AWS::EC2::Instance
    Properties: 
      InstanceType: "t2.medium"
      ImageId: "ami-051f7e7f6c2f40dc1"
      #KeyName: !Ref KindKeyPair
      KeyName: EC2-TUTORIAL
      NetworkInterfaces: 
      - AssociatePublicIpAddress: "true"
        DeviceIndex: "0"
        GroupSet:  
          - !GetAtt KindSecurityGroup.GroupId
      UserData:
        Fn::Base64:  !Sub |
          #!/bin/bash -xe
          yum update -y
          
          echo 'export PATH="/usr/local/bin:$PATH"' >> /etc/profile
          source /etc/profile
          
          /opt/aws/bin/cfn-init -v -s ${AWS::StackId} -r KindEC2Instance --region ${AWS::Region} -c ascending
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource SampleWaitCondition --region ${AWS::Region}
    Metadata:
      Comment: Install Kind
      AWS::CloudFormation::Init:
        configSets:
          ascending:
            - "kubetools"
            - "docker"
            - "kindtools"
            - "config"
            - "cluster"
        kubetools:
          commands:
            install-kubetools:
              command:  |
                cd ./home/ec2-user
                curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
                chmod +x ./kubectl
                sudo mv ./kubectl /usr/local/bin/kubectl
        docker:
          commands:
            install-docker:
              command:  yum install docker -y
            start-docker:
              command:  systemctl start docker
        kindtools:
          commands: 
            install-kindtools:
              command: |
                cd ./home/ec2-user
                curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
                chmod +x ./kind
                sudo mv ./kind /usr/local/bin/kind
        config:
          files: 
            /home/ec2-user/sample-cluster.yaml: 
              content: |
                kind: Cluster
                apiVersion: kind.x-k8s.io/v1alpha4
                nodes:
                - role: control-plane
                - role: worker
              mode: "000644"
              owner: "root"
              group: "root"
        cluster:
          commands:
            create-kind-cluster:
              command: |
                cd ./home/ec2-user
                mkdir .kube
                kind create cluster --name luffy-cluster --config sample-cluster.yaml   --kubeconfig .kube/config
                sudo cp -r /home/ec2-user/.kube /root

      # source ./etc/profile


      # sudo yum update -y
      # sudo yum install nginx -y
      # sudo systemctl start nginx
      # sudo systemctl enable nginx
      # sudo vim /etc/nginx/conf.d/reverse-proxy.conf
      # server {
      #     listen 80;
      #     server_name 54.234.58.4;

      #     location / {
      #         proxy_pass http://172.18.0.2:30004;
      #         proxy_set_header Host $host;
      #         proxy_set_header X-Real-IP $remote_addr;
      #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      #     }
      # }
      # sudo nginx -t
      # sudo systemctl reload nginx


    DependsOn: KindSecurityGroup

  SampleWaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
        Count: 1

  KindSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH and HTTP
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIp: 0.0.0.0/0
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80